name: Build image

on:
  # push:
  #   branches:
  #     - main
  # pull_request:
  workflow_dispatch:
    inputs:
      apply:
        description: Terraform apply
        type: boolean
        required: true

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  
jobs:
  build:
    runs-on: ubuntu-latest
    environment: production


    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          submodules: recursive
          fetch-depth: 0
      
      - name: Print ip 2
        run: echo "$(curl https://ipv4.icanhazip.com/)"

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.4

      - name: Terraform Format Prod
        id: fmt-prod
        run: terraform fmt -check
        working-directory: ./infrastructure

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./infrastructure

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./infrastructure

      - name: Terraform Plan
        id: apply
        run: terraform apply -target=output.ecr-token -auto-approve
        working-directory: ./infrastructure    

      - name: Terraform Output ECR Token
        id: output-token
        run: |
          echo -n "ecr-token=$(terraform output -raw ecr-token | tr -d '\n')" >> "$GITHUB_OUTPUT"
        working-directory: ./infrastructure

      - name: Terraform Output ECR Path
        id: output-path
        run: |
          echo -n "ecr-path=$(terraform output -raw ecr-path | tr -d '\n')" >> "$GITHUB_OUTPUT"
        working-directory: ./infrastructure

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      - run: chmod +x gradlew

      - name: Boot build image
        run: |
          ./gradlew \
          -Pecr.image.name=${{ steps.output-path.outputs.ecr-path }}/web-app \
          -Pecr.token=${{ steps.output-token.outputs.ecr-token }} \
          bootBuildImage